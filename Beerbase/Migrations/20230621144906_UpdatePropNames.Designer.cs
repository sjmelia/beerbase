// <auto-generated />
using System;
using Beerbase.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Beerbase.Migrations
{
    [DbContext(typeof(BeerbaseContext))]
    [Migration("20230621144906_UpdatePropNames")]
    partial class UpdatePropNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("BarBeer", b =>
                {
                    b.Property<int>("BarsServedAtBarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeersServedBeerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BarsServedAtBarId", "BeersServedBeerId");

                    b.HasIndex("BeersServedBeerId");

                    b.ToTable("BarBeer");
                });

            modelBuilder.Entity("Beerbase.Model.Bar", b =>
                {
                    b.Property<int>("BarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BarId");

                    b.ToTable("Bars");
                });

            modelBuilder.Entity("Beerbase.Model.Beer", b =>
                {
                    b.Property<int>("BeerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BreweryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PercentageAlcoholByVolume")
                        .HasColumnType("TEXT");

                    b.HasKey("BeerId");

                    b.HasIndex("BreweryId");

                    b.ToTable("Beers");
                });

            modelBuilder.Entity("Beerbase.Model.Brewery", b =>
                {
                    b.Property<int>("BreweryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BreweryId");

                    b.ToTable("Breweries");
                });

            modelBuilder.Entity("BarBeer", b =>
                {
                    b.HasOne("Beerbase.Model.Bar", null)
                        .WithMany()
                        .HasForeignKey("BarsServedAtBarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Beerbase.Model.Beer", null)
                        .WithMany()
                        .HasForeignKey("BeersServedBeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Beerbase.Model.Beer", b =>
                {
                    b.HasOne("Beerbase.Model.Brewery", "Brewery")
                        .WithMany("Beers")
                        .HasForeignKey("BreweryId");

                    b.Navigation("Brewery");
                });

            modelBuilder.Entity("Beerbase.Model.Brewery", b =>
                {
                    b.Navigation("Beers");
                });
#pragma warning restore 612, 618
        }
    }
}
